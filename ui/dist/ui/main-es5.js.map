{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/customer/create/create.component.ts","webpack:///src/app/customer/create/create.component.html","webpack:///src/app/customer/customer-routing.module.ts","webpack:///src/app/customer/customer.component.ts","webpack:///src/app/customer/customer.component.html","webpack:///src/app/customer/customer.module.ts","webpack:///src/app/customer/view/view.component.ts","webpack:///src/app/customer/view/view.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/interceptors/ContentTypeInterceptor.ts","webpack:///src/app/job-detail/job-detail.component.ts","webpack:///src/app/job-detail/job-detail.component.html","webpack:///src/app/job/job.component.ts","webpack:///src/app/job/job.component.html","webpack:///src/app/models/customer.model.ts","webpack:///src/app/services/customers.service.ts","webpack:///src/app/services/engineer.service.ts","webpack:///src/app/services/job.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","CreateCustomerComponent","fb","customerService","saveEvent","customerForm","group","name","required","minLength","customerType","customerTypes$","GetCustomerTypes","formObj","value","customerTypeId","Number","SaveCustomer","subscribe","o","emit","createCustomer","CustomerRoutingModule","forChild","CustomerComponent","customers$","GetCustomers","evt","customerSaved","CustomerModule","ViewComponent","route","customerId","parseInt","snapshot","paramMap","get","customer$","GetCustomerById","HomeComponent","ContentTypeInterceptor","request","next","headers","has","clone","set","handle","JobDetailComponent","jobService","jobId","params","GetJob","job","JobComponent","engineerService","engineers","jobs","newJob","engineer","when","customer","GetEngineers","GetJobs","form","invalid","alert","CreateJob","createJob","CustomerModel","CustomersService","httpClient","apiUrl","console","log","post","providedIn","EngineerService","JobService","toPromise","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { JobComponent } from './job/job.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { JobDetailComponent } from './job-detail/job-detail.component';\r\nimport { CustomerRoutingModule } from './customer/customer-routing.module';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'jobs', component: JobComponent },\r\n  { path: 'job/:id', component: JobDetailComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes), CustomerRoutingModule],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'ui';\r\n}\r\n","\r\n  <nav>\r\n    <a href=\"/home\">home</a>\r\n    <a href=\"/jobs\">jobs</a>\r\n    <a href=\"/customer\">Customer</a>\r\n  </nav>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { JobComponent } from './job/job.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { JobDetailComponent } from './job-detail/job-detail.component';\r\nimport { CustomerModule } from './customer/customer.module';\r\nimport { ContentTypeInterceptor } from './interceptors/ContentTypeInterceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JobComponent,\r\n    HomeComponent,\r\n    JobDetailComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    CustomerModule\r\n  ],\r\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: ContentTypeInterceptor, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { CustomersService } from '../../services/customers.service';\nimport { CustomerTypeModel } from '../../models/customer-types.model';\nimport { CustomerModel } from '../../models/customer.model';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-customer-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateCustomerComponent implements OnInit {\n  @Output() saveEvent = new EventEmitter<boolean>();\n  constructor(private fb: FormBuilder, private customerService: CustomersService) { }\n\n  customerTypes$: Observable<CustomerTypeModel[]>;\n\n  customerForm = this.fb.group({\n    name: ['', [Validators.required, Validators.minLength(5)]],\n    customerType: [null, Validators.required]\n  });\n\n  ngOnInit(): void {\n\n    this.customerTypes$ = this.customerService.GetCustomerTypes();\n\n  }\n\n  createCustomer(): void {\n    const formObj = new CustomerModel();\n\n    formObj.name = this.customerForm.value.name;\n    formObj.customerTypeId = Number(this.customerForm.value.customerType);\n\n    this.customerService.SaveCustomer(formObj).subscribe(o => {\n      this.saveEvent.emit(true);\n    });\n  }\n\n}\n","<h2>Create Customer</h2>\n\n<form [formGroup]=\"customerForm\" (ngSubmit)=\"createCustomer()\">\n  <label for=\"name\">Customer Name</label>\n  <input type=\"text\" formControlName=\"name\"/>\n  <select name=\"customerType\" formControlName=\"customerType\" placeholder=\"Please Select\">\n    <option [value]=\"null\" selected disabled>Please select</option>\n    <option *ngFor=\"let cust of customerTypes$ | async\" [value]=\"cust.id\">{{cust.name}}</option>\n  </select>\n\n  <button type=\"submit\" [disabled]=\"!customerForm.valid\">Add Job</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerComponent } from './customer.component';\nimport { ViewComponent } from './view/view.component';\n\nconst routes: Routes = [\n  { path: 'customer', component: CustomerComponent },\n  { path: 'customer/view/:id', component: ViewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CustomersService } from '../services/customers.service';\nimport { CustomerModel } from '../models/customer.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.scss']\n})\nexport class CustomerComponent implements OnInit {\n  \n  constructor(private customerService: CustomersService) { }\n\n  customers$: Observable<CustomerModel[]>;\n\n  ngOnInit(): void {\n    this.customers$ = this.customerService.GetCustomers();\n  }\n\n  customerSaved(evt) {\n    this.customers$ = this.customerService.GetCustomers();\n  }\n\n}\n","<app-customer-create (saveEvent)=\"customerSaved($event);\"></app-customer-create>\r\n\r\n<h2>Customers</h2>\r\n\r\n<table width=\"0\">\r\n  <thead>\r\n    <tr><th>Id</th><th>Customer Name</th><th>Customer Type</th><th>&nbsp;</th></tr>\r\n  </thead>\r\n  <tr *ngFor=\"let cust of customers$ | async\">\r\n    <td>\r\n      {{cust.id}}\r\n    </td>\r\n    <td>\r\n      {{cust.name}}\r\n    </td>\r\n    <td>\r\n      {{cust.customerType}}\r\n    </td>\r\n    <td>\r\n      <a routerLink=\"/customer/view/{{cust.id}}\">open</a>\r\n    </td>\r\n  </tr>\r\n</table>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CustomerRoutingModule } from './customer-routing.module';\nimport { CustomerComponent } from './customer.component';\nimport { CreateCustomerComponent } from './create/create.component';\nimport { ViewComponent } from './view/view.component';\n\n\n@NgModule({\n  declarations: [CustomerComponent, CreateCustomerComponent, ViewComponent],\n  imports: [\n    CommonModule,\n    CustomerRoutingModule,\n    ReactiveFormsModule\n  ],\n  exports: [CreateCustomerComponent]\n})\nexport class CustomerModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CustomersService } from '../../services/customers.service';\nimport { CustomerModel } from '../../models/customer.model';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n  customer$: Observable<CustomerModel>;\n  constructor(private customerService: CustomersService, private route: ActivatedRoute) { }\n  customerId: number;\n\n  ngOnInit(): void {\n    this.customerId = parseInt(this.route.snapshot.paramMap.get('id') || \"\", 10);\n    this.customer$ = this.customerService.GetCustomerById(this.customerId);\n  }\n\n}\n","<div *ngIf=\"(customer$ | async) as cust\">\r\n  <p>Customer Id: {{cust.id}}</p>\r\n  <p>Customer Name: {{cust.name}}</p>\r\n  <p>Customer Type: {{cust.customerType}}</p>\r\n\r\n  <a [routerLink]=\"['/customer']\">Back</a>\r\n</div>\r\n\r\n<div *ngIf=\"!(customer$ | async)\">\r\n  ...loading\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<h1>Welcome to ServiceSight</h1>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ContentTypeInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // add authorization header with jwt token if available\r\n    \r\n    if (!request.headers.has('Content-Type')) {\r\n      request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { JobService } from '../services/job.service';\r\nimport { JobModel } from '../models/job.model';\r\n\r\n@Component({\r\n  selector: 'app-job-detail',\r\n  templateUrl: './job-detail.component.html',\r\n  styleUrls: ['./job-detail.component.scss']\r\n})\r\nexport class JobDetailComponent implements OnInit {\r\n\r\n  private jobId: number;\r\n\r\n  public job: JobModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private jobService: JobService) {\r\n      this.jobId = route.snapshot.params.id;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.jobService.GetJob(this.jobId).subscribe(job => this.job = job);\r\n  }\r\n\r\n}\r\n","<p>JobId: {{job.jobId}}</p>\r\n<p>Engineer: {{job.engineer}}</p>\r\n<p>When: {{job.when | date:'shortDate'}}</p>\r\n\r\n<div *ngIf=\"job.customer.id != 0\">\r\n  <p>Customer Name: {{job.customer.name}}</p>\r\n  <p>Customer Type: {{job.customer.customerType}}</p>\r\n</div>\r\n\r\n<div *ngIf=\"job.customer.id == 0\">\r\n  <p>Customer Unknown</p>\r\n</div>\r\n\r\n<a [routerLink]=\"['/jobs']\">Back</a>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { EngineerService } from '../services/engineer.service';\r\nimport { JobService } from '../services/job.service';\r\nimport { JobModel } from '../models/job.model';\r\nimport { CustomersService } from '../services/customers.service';\r\nimport { CustomerModel } from '../models/customer.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-job',\r\n  templateUrl: './job.component.html',\r\n  styleUrls: ['./job.component.scss']\r\n})\r\nexport class JobComponent implements OnInit {\r\n  customers$: Observable<CustomerModel[]>;\r\n  public engineers: string[] = [];\r\n\r\n  public jobs: JobModel[] = [];\r\n\r\n  public newJob: JobModel = {\r\n    jobId: null,\r\n    engineer: null,\r\n    when: null,\r\n    customerId: null,\r\n    customer: null\r\n  };\r\n\r\n  constructor(\r\n    private engineerService: EngineerService,\r\n    private jobService: JobService,\r\n    private customerService: CustomersService) { }\r\n\r\n  ngOnInit() {\r\n    this.engineerService.GetEngineers().subscribe(engineers => this.engineers = engineers);\r\n    this.jobService.GetJobs().subscribe(jobs => this.jobs = jobs);\r\n    this.customers$ = this.customerService.GetCustomers();\r\n  }\r\n\r\n  public createJob(form: NgForm): void {\r\n    if (form.invalid) {\r\n      alert('form is not valid');\r\n    } else {\r\n      this.jobService.CreateJob(this.newJob).then(() => {\r\n        this.jobService.GetJobs().subscribe(jobs => this.jobs = jobs);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<h2>New job form</h2>\r\n<form #jobForm=\"ngForm\" (ngSubmit)=\"createJob(jobForm)\">\r\n  <label for=\"engineer\">Engineer</label>\r\n  <select name=\"engineer\" required #engineer=\"ngModel\" ngModel placeholder=\"Please select\" [(ngModel)]=\"newJob.engineer\">\r\n    <option [ngValue]=\"undefined\" selected>Please select</option>\r\n    <option *ngFor=\"let engineer of engineers\">{{engineer}}</option>\r\n  </select>\r\n  <small *ngIf=\"engineer.invalid\">Please select an engineer</small>\r\n  <label for=\"when\">When</label>\r\n  <input type=\"date\" name=\"when\" ngModel required #when=\"ngModel\" [(ngModel)]=\"newJob.when\" />\r\n  <small *ngIf=\"when.invalid\">Please select a valid date</small>\r\n\r\n  <label for=\"customer\">Customer</label>\r\n  <select name=\"customer\" required #customer=\"ngModel\" ngModel placeholder=\"Please Select\" [(ngModel)]=\"newJob.customerId\">\r\n    <option [value]=\"null\" selected disabled>Please select</option>\r\n    <option *ngFor=\"let cust of customers$ | async\" [value]=\"cust.id\">{{cust.name}}</option>\r\n  </select>\r\n  <small *ngIf=\"customer.invalid\">Please select a customer</small>\r\n\r\n  <button type=\"submit\" [disabled]=\"jobForm.invalid\">Add Job</button>\r\n</form>\r\n\r\n<h2>Jobs list</h2>\r\n<table spacing=\"0\">\r\n  <thead>\r\n    <tr>\r\n      <th>Engineer</th>\r\n      <th>When</th>\r\n      <th>Customer</th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let job of jobs\">\r\n      <td>{{job.engineer}}</td>\r\n      <td>{{job.when | date:'shortDate'}}</td>\r\n      <td>{{job.customer.id == 0 ? 'unknown' : job.customer.name}}</td>\r\n      <td>\r\n        <a [routerLink]=\"['/job', job.jobId]\">Open</a>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","export class CustomerModel {\r\n  id: number;\r\n  name: string;\r\n  customerTypeId: number;\r\n  customerType: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CustomerTypeModel } from '../models/customer-types.model';\nimport { CustomerModel } from '../models/customer.model';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService {\n\n  apiUrl = \"http://localhost:63235\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  public GetCustomerTypes(): Observable<CustomerTypeModel[]> {\n    return this.httpClient.get<CustomerTypeModel[]>(`${this.apiUrl}/customer/types`);\n  }\n\n  public SaveCustomer(customer: CustomerModel) {\n    console.log(customer);\n    return this.httpClient.post<CustomerModel>(`${this.apiUrl}/customer`, customer);\n  }\n\n  public GetCustomers(): Observable<CustomerModel[]> {\n    return this.httpClient.get<CustomerModel[]>(`${this.apiUrl}/customer`);\n  }\n\n  public GetCustomerById(id: number): Observable<CustomerModel> {\n    return this.httpClient.get<CustomerModel>(`${this.apiUrl}/customer/${id}`);\n  }\n}\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EngineerService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public GetEngineers(): Observable<string[]> {\r\n    return this.httpClient.get<string[]>('http://localhost:63235/engineer');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { JobModel } from '../models/job.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public GetJobs(): Observable<JobModel[]> {\r\n    return this.httpClient.get<JobModel[]>('http://localhost:63235/job');\r\n  }\r\n\r\n  public GetJob(jobId: number): Observable<JobModel> {\r\n    return this.httpClient.get<JobModel>(`http://localhost:63235/job/${jobId}`);\r\n  }\r\n\r\n  public CreateJob(job: JobModel): Promise<object> {\r\n    job.customerId = Number(job.customerId);\r\n    return this.httpClient.post('http://localhost:63235/job', job).toPromise();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}